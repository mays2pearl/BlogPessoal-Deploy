{"version":3,"sources":["service/Service.ts","components/postagens/listapostagem/ListaPostagem.tsx","components/postagens/tabpostagem/TabPostagem.tsx","components/postagens/cadastroPost/CadastroPost.tsx","components/postagens/modalPostagem/ModalPostagem.tsx","pages/home/Home.tsx","pages/cadastroUsuario/CadastroUsuario.tsx","store/tokens/actions.ts","components/statics/navbar/Navbar.tsx","components/statics/footer/Footer.tsx","pages/login/Login.tsx","components/temas/listatema/ListaTema.tsx","components/temas/cadastroTema/CadastroTema.tsx","components/postagens/deletarPostagem/DeletarPostagem.tsx","components/temas/deletartema/DeletarTema.tsx","store/tokens/tokensReducer.ts","store/store.ts","pages/animes/SearchInput.js","pages/animes/useDebounce.js","pages/animes/AppAnime.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["api","axios","create","baseURL","cadastroUsuario","url","dados","setDado","a","post","resposta","data","login","token","busca","header","get","buscaId","put","deleteId","delete","ListaPostagem","useState","posts","setPosts","history","useHistory","useSelector","state","tokens","headers","useEffect","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","getPost","length","container","justifyContent","alignItems","Box","className","map","m","Card","variant","CardContent","Typography","color","gutterBottom","component","titulo","texto","tema","descricao","CardActions","display","mb","to","id","mx","Button","size","TabPostagem","value","setValue","TabContext","AppBar","Tabs","centered","onChange","event","newValue","Tab","label","TabPanel","flexWrap","align","CadastroPost","useParams","temas","setTemas","setTema","postagem","setPostagem","updatedPostagem","e","target","name","preventDefault","success","back","getTemas","findByIdPostagem","Container","maxWidth","onSubmit","TextField","margin","fullWidth","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","type","getModalStyle","top","left","transform","useStyles","makeStyles","createStyles","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ModalPostagem","classes","React","modalStyle","open","setOpen","handleClose","body","style","onClick","Modal","onClose","Home","Grid","direction","item","xs","paddingX","marginRight","CadastroUsuario","confirmarSenha","setConfirmarSenha","nome","usuario","senha","user","setUser","userResult","setUserResult","updatedModel","confirmarSenhaHandle","marginTop","textAlign","addToken","payload","Navbar","navbarComponent","dispatch","useDispatch","Toolbar","cursor","ml","info","Footer","footerComponent","height","paddingTop","href","GitHub","fontSize","WhatsApp","Login","setToken","userLogin","setUserLogin","ListaTema","getTema","CadastroTema","console","log","JSON","stringify","findById","updatedTema","DeletarPostagem","DeletarTema","initialState","store","createStore","action","SearchInput","displayValue","setDisplayValue","debouncedChange","fn","delay","timeoutRef","useRef","args","window","clearTimeout","current","setTimeout","useDebounce","AppAnime","setInfo","text","setText","fetch","then","response","json","search","anime","src","attributes","posterImage","small","alt","canonicalTitle","App","basename","process","minHeight","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba377217.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n    baseURL: 'https://mayspearl.herokuapp.com'\r\n})\r\n\r\nexport const cadastroUsuario = async(url: any, dados: any, setDado: any) => {\r\n    const resposta = await api.post(url, dados)\r\n    setDado(resposta.data)\r\n}\r\nexport const login = async(url: any, dados: any, setDado: any) => {\r\n    const resposta = await api.post(url, dados)\r\n    setDado(resposta.data.token)\r\n}\r\nexport const busca = async(url: any, setDado: any, header: any) => {\r\n    const resposta = await api.get(url, header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const buscaId = async(url: any,setDado: any, header: any) => { \r\n    const resposta = await api.get(url,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const post = async(url: any, dados: any, setDado: any, header: any) => { \r\n    const resposta = await api.post(url,dados,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const put = async(url: any, dados: any, setDado: any, header: any) => { \r\n    const resposta = await api.put(url,dados,header)\r\n    setDado(resposta.data)\r\n}\r\n\r\nexport const deleteId = async(url: any,header: any) => { \r\n    await api.delete(url,header)\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca } from '../../../service/Service'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport './ListaPostagem.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\nimport { Grid } from '@mui/material';\r\n\r\nfunction ListaPostagem() { \r\n  const [posts, setPosts] = useState<Postagem[]>([])\r\n  let history = useHistory();\r\n  const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (token == \"\") {\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n    });\r\n      history.push(\"/login\")\r\n\r\n    }\r\n  }, [token])\r\n\r\n  async function getPost() {\r\n    await busca(\"/postagem\", setPosts, {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    getPost()\r\n\r\n  }, [posts.length])\r\n\r\n  return (\r\n    <>\r\n     <Grid container justifyContent=\"center\" alignItems=\"center\" >\r\n    <Box className='box2'>\r\n      {\r\n        posts.map(post => (\r\n          <Box m={2} >\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Postagens\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {post.titulo}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.texto}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.tema?.descricao}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n\r\n                  <Link to={`/formularioPostagem/${post.id}`} className=\"text-decorator-none\" >\r\n                    <Box mx={1}>\r\n                      <Button variant=\"contained\" className=\"marginLeft colorBotao1\" size='small'  >atualizar</Button>\r\n                    </Box>\r\n                  </Link>\r\n                  <Link to={`/deletarPostagem/${post.id}`} className=\"text-decorator-none\">\r\n                    <Box mx={1}>\r\n                      <Button variant=\"contained\" size='small' className='colorBotao2'>\r\n                        deletar\r\n                      </Button>\r\n                    </Box>\r\n                  </Link>\r\n                </Box>\r\n              </CardActions>\r\n            </Card>\r\n          </Box>\r\n        ))\r\n      }\r\n      </Box>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListaPostagem;","import React, {useState} from 'react'\r\nimport { AppBar, Tab, Tabs, Typography, Box } from '@material-ui/core';\r\nimport { TabContext, TabPanel } from '@mui/lab';\r\nimport ListaPostagem from '../listapostagem/ListaPostagem';\r\nimport './TabPostagem.css';\r\n\r\n\r\nfunction TabPostagem() {\r\n    const [value, setValue] = useState('1')\r\n    function handleChange(event: React.ChangeEvent<{}>, newValue: string){\r\n        setValue(newValue);\r\n    }\r\n  return (\r\n    <>\r\n      <TabContext value={value}>\r\n        <AppBar position=\"static\">\r\n          <Tabs centered className='caixa3' onChange={handleChange}>\r\n            <Tab label=\"Todas as postagens\" value=\"1\"/>\r\n            <Tab label=\"Um pouco sobre mim:\" value=\"2\" />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value=\"1\" >\r\n          <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\">\r\n            <ListaPostagem />\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value=\"2\">\r\n          <Typography variant=\"h4\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className=\"titulo\">Um pouco sobre mim:</Typography>\r\n          <Typography variant=\"body1\" gutterBottom color=\"textPrimary\" align=\"justify\">Sou uma pessoa que sempre esta em busca de algo melhor, de ser uma pessoa melhor, por isso venho trilhando na minha vida profissional caminhos de sucesso e orgulho! Comecei trabalhando com vendas de produtos financeiros, migrei para vendas na área comercial/indústria interna, onde desenvolvi habilidades de negociação em vendas! Buscando crescer numa área profissional valorizada, que me proporcione uma condição financeira estável e confortável, e que conciliasse com algo que eu goste e com o qual eu tinha afinidade, iniciei meus estudos em programação e desenvolvimento de sistemas e aplicativos. Nessa área de tecnologia se destaca o curso de IOS Mobile na Digital House e o BootCamp java fullStack na Generation Brasil.</Typography>\r\n        </TabPanel>\r\n      </TabContext>\r\n    </>\r\n  );\r\n}\r\nexport default TabPostagem;","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastroPost.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../service/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroPost() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{ id: string }>();\r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n\r\n        }\r\n    }, [token])\r\n\r\n    const [tema, setTema] = useState<Tema>(\r\n        {\r\n            id: 0,\r\n            descricao: ''\r\n        })\r\n    const [postagem, setPostagem] = useState<Postagem>({\r\n        id: 0,\r\n        titulo: '',\r\n        texto: '',\r\n        tema: null\r\n    })\r\n\r\n    useEffect(() => { \r\n        setPostagem({\r\n            ...postagem,\r\n            tema: tema\r\n        })\r\n    }, [tema])\r\n\r\n    useEffect(() => {\r\n        getTemas()\r\n        if (id !== undefined) {\r\n            findByIdPostagem(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function getTemas() {\r\n        await busca(\"/temas\", setTemas, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdPostagem(id: string) {\r\n        await buscaId(`postagem/${id}`, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setPostagem({\r\n            ...postagem,\r\n            [e.target.name]: e.target.value,\r\n            tema: tema\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (id !== undefined) {\r\n            put(`/postagem`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem atualizada com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            post(`/postagem`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem cadastrada com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        history.push('/posts')\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\r\n                <TextField value={postagem.titulo} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n                <TextField value={postagem.texto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n\r\n                <FormControl >\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e) => buscaId(`/temas/${e.target.value}`, setTema, {\r\n                            headers: {\r\n                                'Authorization': token\r\n                            }\r\n                        })}>\r\n                        {\r\n                            temas.map(tema => (\r\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\r\n                    <Button type=\"submit\" variant=\"contained\" className = 'colorBotaoP'>\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {Button,Box } from \"@material-ui/core\"\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './ModalPostagem.css';\r\nimport CadastroPost from '../cadastroPost/CadastroPost';\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 ;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction ModalPostagem () {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" className=\"cursor\">\r\n        <CloseIcon onClick={handleClose}/>\r\n      \r\n      </Box>\r\n      \r\n      <CadastroPost/>\r\n      \r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        className=\"btnModal\"\r\n        onClick={handleOpen}>Nova Postagem</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalPostagem","import React, { useEffect } from 'react';\r\nimport {Typography, Box, Grid, Button} from '@material-ui/core';\r\nimport TabPostagem from '../../components/postagens/tabpostagem/TabPostagem';\r\nimport ModalPostagem from '../../components/postagens/modalPostagem/ModalPostagem';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\nimport { useHistory } from 'react-router';import { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Home() {\r\n\r\n    let history = useHistory();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n      \r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n              history.push(\"/login\")\r\n      \r\n          }\r\n      }, [token])\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className='caixa'>\r\n                <Grid alignItems=\"center\" item xs={6}>\r\n                    <Box paddingX={20} >\r\n                        <Typography variant=\"h3\" gutterBottom color=\"textPrimary\" component=\"h3\" align=\"center\" className='titulo'>Seja bem vindo(a) ao meu Blog!</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className='titulo'>Expresse aqui os seus pensamentos e opiniões!</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Box marginRight={1}>\r\n                            <ModalPostagem />\r\n                        </Box>\r\n                        <Link to='/posts' className='text-decoration-none'>\r\n                        <Button variant=\"outlined\" className='botao'>Ver Postagens</Button>\r\n                        </Link>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Box marginRight={1}>\r\n                        </Box>\r\n                        <Link to='/anime' className='text-decoration-none'>\r\n                        <Button variant=\"outlined\" className='botao'>Pesquisar Animes</Button>\r\n                        </Link>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} className='imagem'>\r\n     </Grid>\r\n                <Grid xs={12} className='postagens botao'>\r\n                    <TabPostagem/>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React , {useState, useEffect, ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport User from '../../models/User';\r\nimport { cadastroUsuario } from '../../service/Service';\r\nimport { Grid, Box, Typography, Button, TextField } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './CadastroUsuario.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroUsuario() {\r\n\r\n    let history = useHistory();\r\n    const [confirmarSenha,setConfirmarSenha] = useState<String>(\"\")\r\n    const [user, setUser] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (userResult.id != 0) {\r\n            history.push(\"/login\")\r\n        }\r\n    }, [userResult])\r\n\r\n\r\n    function confirmarSenhaHandle(e: ChangeEvent<HTMLInputElement>){\r\n        setConfirmarSenha(e.target.value)\r\n    }\r\n\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n        if(confirmarSenha == user.senha){\r\n        cadastroUsuario(`/usuarios/cadastrar`, user, setUserResult)\r\n        toast.success('Usuario cadastrado com sucesso', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n            });\r\n        }else{\r\n            toast.error('Dados inconsistentes. Favor verificar as informações de cadastro.', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid item xs={6} className='imagem2'></Grid>\r\n            <Grid item xs={6} alignItems='center'>\r\n                <Box paddingX={10}>\r\n                    <form onSubmit={onSubmit}>\r\n                    <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='textos2'>Cadastrar</Typography>\r\n                        <TextField value={user.nome} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='nome' label='nome' variant='outlined' name='nome' margin='normal' fullWidth />\r\n                        <TextField value={user.usuario} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}id='usuario' label='usuario' variant='outlined' name='usuario' margin='normal'fullWidth />\r\n                        <TextField value={user.senha} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}id='senha' label='senha' variant='outlined' name='senha' margin='normal' type='password' fullWidth />\r\n                        <TextField value={confirmarSenha} onChange={(e: ChangeEvent<HTMLInputElement>) => confirmarSenhaHandle(e)}id='confirmarSenha' label='confirmarSenha' variant='outlined' name='confirmarSenha' margin='normal' type='password' fullWidth />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                            <Link to='/login' className='text-decorator-none'>\r\n                                <Button variant='contained' color='secondary' className='btnCancelar'>\r\n                                    Cancelar\r\n                                </Button>\r\n                            </Link>\r\n                            <Button type='submit' variant='contained' color='primary'>\r\n                                    Cadastrar\r\n                            </Button>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;","export type Action = {type: \"ADD_TOKEN\"; payload: string};\r\n\r\nexport const addToken = (token: string): Action =>({\r\n    type: \"ADD_TOKEN\",\r\n    payload: token,\r\n});","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToken } from '../../../store/tokens/actions';\r\nimport {toast} from 'react-toastify';\r\nfunction Navbar() {\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    function goLogout(){\r\n        dispatch(addToken(''));\r\n        toast.info(\"Usuário deslogado\", {\r\n            position: 'top-right',\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme:'colored',\r\n            progress: undefined,\r\n\r\n        })\r\n        history.push('/login')\r\n    }\r\n\r\n    var navbarComponent;\r\n\r\n    if(token != \"\"){\r\n        navbarComponent = <AppBar position=\"static\" style={{ backgroundColor: \"#FF1493\" }}>\r\n            <Toolbar variant=\"dense\">\r\n                <Box style={{ cursor: \"pointer\", backgroundColor: \"#FF1493\" }}>\r\n                    <Typography className=\"fontes\" variant=\"h4\" color=\"inherit\" >\r\n                        BLOG PESSOAL\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Box ml='auto' display=\"flex\">\r\n                    <Link to='/home' className='text-decorator-none'>\r\n                        <Box mx={1} className='cursor'>\r\n                            <Typography variant=\"h6\" color=\"inherit\">\r\n                                HOME\r\n                            </Typography>\r\n                        </Box>\r\n                    </Link>\r\n                    <Link to='/posts' className='text-decorator-none'>\r\n                        <Box mx={1} className='cursor'>\r\n                            <Typography variant=\"h6\" color=\"inherit\">\r\n                                POSTAGENS\r\n                            </Typography>\r\n                        </Box>\r\n                    </Link>\r\n                    <Link to='temas' className='text-decorator-none'>\r\n                        <Box mx={1} className='cursor'>\r\n                            <Typography variant=\"h6\" color=\"inherit\">\r\n                                TEMAS\r\n                            </Typography>\r\n                        </Box>\r\n                    </Link>\r\n                    <Link to='/formularioTema' className='text-decorator-none'>\r\n                        <Box mx={1} className='cursor'>\r\n                            <Typography variant=\"h6\" color=\"inherit\">\r\n                                CADASTRAR TEMA\r\n                            </Typography>\r\n                        </Box>\r\n                    </Link>\r\n\r\n                    <Box mx={1} className='cursor' onClick={goLogout}>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            LOGOUT\r\n                        </Typography>\r\n                    </Box>\r\n\r\n\r\n                </Box>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    }\r\n        return (\r\n            <>\r\n                {navbarComponent}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    export default Navbar;","import React from 'react';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport {Typography, Box, Grid } from '@mui/material';\r\nimport { GitHub, WhatsApp } from '@material-ui/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\n\r\nfunction Footer() {\r\n\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n        );\r\n\r\n        var footerComponent;\r\n        if(token != \"\"){\r\n            footerComponent= <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid alignItems=\"center\" item xs={12}>\r\n                <Box style={{ backgroundColor: \"#FF1493\", height: \"120px\" }}>\r\n                    <Box paddingTop={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <Typography variant=\"h5\" align=\"center\" gutterBottom style={{ color: \"white\" }}>Contate - me </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                        <a href=\"https://github.com/mays2pearl\" target=\"_blank\">\r\n                            <GitHub style={{ fontSize: 50, color: \"white\" }} />\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/maysa-andrade-maysa-andrade/\" target=\"_blank\">\r\n                            <LinkedInIcon style={{ fontSize: 60, color: \"white\" }} />\r\n                        </a>\r\n                        <a href=\"http://api.whatsapp.com/send?1=pt_BR&phone=5511961787592\" target=\"_blank\">\r\n                            <WhatsApp style={{ fontSize: 60, color: \"white\" }} />\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n                <Box style={{ backgroundColor: \"#FF1493\", height: \"60px\" }}>\r\n                    <Box paddingTop={1}>\r\n                        <Typography variant=\"subtitle2\" align=\"center\" gutterBottom style={{ color: \"white\" }} >© 2021 Copyright:</Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <a target=\"_blank\" href=\"https://mail.google.com/mail/?view=cm&fs=1&to=maysas2perola@gmail.com\">\r\n                            <Typography variant=\"subtitle2\" gutterBottom style={{ color: \"white\" }} align=\"center\">Maysa Andrade</Typography>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n        }\r\n    return (\r\n        <>\r\n           {footerComponent}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { Grid, Box, Typography, TextField, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { login } from '../../service/Service';\r\nimport UserLogin from '../../models/UserLogin';\r\nimport './Login.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToken } from \"../../store/tokens/actions\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Login() {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [token, setToken] = useState('');\r\n    const [userLogin, setUserLogin] = useState<UserLogin>(\r\n        {\r\n            id: 0,\r\n            usuario: '',\r\n            senha: '',\r\n            token: ''\r\n        }\r\n        )\r\n\r\n        function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setUserLogin({\r\n                ...userLogin,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n            useEffect(()=>{\r\n                if(token != ''){\r\n                    dispatch(addToken(token));\r\n                    history.push('/home')\r\n                }\r\n            }, [token])\r\n\r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n            e.preventDefault();\r\n            try{\r\n                await login(`/usuarios/logar`, userLogin, setToken)\r\n                toast.success('Usuário logado com sucesso!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }catch(error){\r\n                toast.error('Dados do usuário inconsistentes. Erro ao logar!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }\r\n        }\r\n\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid alignItems='center' xs={6}>\r\n                <Box paddingX={20}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='textos1'>Entrar</Typography>\r\n                        <TextField value={userLogin.usuario} onChange={(e:ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='usuario' label='usuário' variant='outlined' name='usuario' margin='normal' fullWidth />\r\n                        <TextField value={userLogin.senha} onChange={(e:ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='senha' label='senha' variant='outlined' name='senha' margin='normal' type='password'fullWidth />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                                <Button type='submit' variant='contained' className='botao'>\r\n                                    Logar\r\n                                </Button>\r\n                        </Box>\r\n                    </form>\r\n                    <Box display='flex' justifyContent='center' marginTop={2}>\r\n                        <Box marginRight={1}>\r\n                            <Typography variant='subtitle1' gutterBottom align='center'>Não tem uma conta?</Typography>\r\n                        </Box>\r\n                        <Link to='/cadastrousuario'>\r\n                            <Typography variant='subtitle1' gutterBottom align='center' className='textos1'>Cadastre-se</Typography>\r\n                        </Link>\r\n                            \r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n            <Grid xs={6} className='imagem'>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport Tema from '../../../models/Tema';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { busca } from '../../../service/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport './ListaTema.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Grid } from '@mui/material';\r\n\r\nfunction ListaTema() {\r\n  const [temas, setTemas] = useState<Tema[]>([])\r\n  let history = useHistory();\r\n  const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(token == ''){\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n        });\r\n      history.push(\"/login\")\r\n    }\r\n  }, [token])\r\n\r\n\r\n  async function getTema(){\r\n    await busca(\"/temas\", setTemas, {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    getTema()\r\n  }, [temas.length])\r\n\r\n  return (\r\n    <>\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\" >\r\n    <Box className='box2'>\r\n    {\r\n      temas.map(tema =>(\r\n        \r\n      <Box m={3}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent >\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Tema\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {tema.descricao}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5} >\r\n\r\n              <Link to={`/formularioTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft colorBotaoT1\" size='small' >\r\n                    atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' className = 'colorBotaoT2'>\r\n                    deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n      ))\r\n      }\r\n      </Box>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ListaTema;","import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport {useHistory, useParams } from 'react-router-dom'\r\nimport './CadastroTema.css';\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../service/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\nimport { Grid } from '@mui/material';\r\n\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n                });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/temas/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setTema({\r\n                ...tema,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"tema \" + JSON.stringify(tema))\r\n    \r\n            if (id !== undefined) {\r\n                console.log(tema)\r\n                put(`/temas`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Tema atualizado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            } else {\r\n                post(`/temas`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Tema cadastrado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            history.push('/temas')\r\n        }\r\n  \r\n    return (\r\n     <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" className = 'colorBotaoT'>\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;","import React, { useEffect, useState } from 'react'\r\nimport {Typography, Button, Box, Card, CardActions, CardContent } from \"@material-ui/core\"\r\nimport './DeletarPostagem.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../service/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction DeletarPostagem() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n    );\r\n    const [post, setPosts] = useState<Postagem>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/postagem/${id}`, setPosts, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/posts')\r\n            deleteId(`/postagem/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Postagem deletada com sucesso', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n          });\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/posts')\r\n          }\r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\" >\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Postagem:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" >\r\n              {post?.titulo}\r\n              </Typography>\r\n            </Box>\r\n\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n              <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                Sim\r\n              </Button>\r\n              </Box>\r\n              <Box>\r\n              <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                Não\r\n              </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarPostagem;","import React, { useEffect, useState } from 'react'\r\nimport {Box, Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport './DeletarTema.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { buscaId, deleteId } from '../../../service/Service';\r\nimport Tema from '../../../models/Tema';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction DeletarTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n    );\r\n    const [tema, setTema] = useState<Tema>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logado!', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/temas/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/temas')\r\n            deleteId(`/temas/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Tema deletado com sucesso!', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n              });\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/temas')\r\n          }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar o Tema:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {tema?.descricao}\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarTema;","import {Action } from './actions';\r\n\r\nexport interface TokenState {\r\n    tokens: string\r\n}\r\n\r\nconst initialState = {\r\n    tokens: \"\"\r\n}\r\n\r\nexport const tokenReducer = (state: TokenState = initialState, action: Action) =>{\r\n    switch (action.type){\r\n        case \"ADD_TOKEN\": {\r\n            return {tokens: action.payload}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore} from 'redux';\r\nimport { tokenReducer } from './tokens/tokensReducer';\r\n\r\nconst store = createStore(tokenReducer);\r\n\r\nexport default store;","import React, { useState } from 'react';\r\nimport useDebounce from './useDebounce.js';\r\n\r\nconst SearchInput = ({ value, onChange }) => {\r\n  const [displayValue, setDisplayValue] = useState(value);\r\n  const debouncedChange = useDebounce(onChange, 500);\r\n\r\n  function handleChange(event) {\r\n    setDisplayValue(event.target.value);\r\n    debouncedChange(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      value={displayValue}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;","import { useRef } from 'react';\r\n\r\nexport default function useDebounce(fn, delay) {\r\n  const timeoutRef = useRef(null);\r\n\r\n  function debouncedFn(...args) {\r\n    window.clearTimeout(timeoutRef.current);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      fn(...args);\r\n    }, delay);\r\n  }\r\n\r\n  return debouncedFn;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport SearchInput from './SearchInput';\r\nimport { Box, Button} from '@material-ui/core';\r\nimport { TokenState } from '../../store/tokens/tokensReducer';\r\nimport { useHistory } from 'react-router';import { useSelector } from 'react-redux';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nconst api = 'https://kitsu.io/api/edge/';\r\n\r\n  function AppAnime() {\r\n   \r\n  const [info, setInfo] = useState({});\r\n  const [text, setText] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n    if (text) {\r\n      setInfo({});\r\n\r\n      fetch(\r\n        `${api}anime?filter[text]=${text}&page[limit]=12`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          setInfo(response);\r\n        });\r\n    }\r\n  }, [text]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n       <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Box marginRight={1}>\r\n                        </Box>\r\n                        <Link to='/home' className='text-decoration-none'>\r\n                        <Button variant=\"outlined\" className='botao'>Voltar</Button>\r\n                        </Link>\r\n                    </Box>\r\n      <h1>Pesquise um Anime:</h1>\r\n      <SearchInput\r\n        value={text}\r\n        onChange={(search) => setText(search)}\r\n      />\r\n      {text && !info.data && <span>Carregando...</span>}\r\n      {info.data && (\r\n        <ul className=\"animes-list\">\r\n          {info.data.map((anime) => (\r\n            <li key={anime.id}>\r\n              <img\r\n                src={anime.attributes.posterImage.small}\r\n                alt={anime.attributes.canonicalTitle}\r\n              />\r\n              {anime.attributes.canonicalTitle}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n export default AppAnime;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './pages/home/Home';\r\nimport CadastroUsuario from './pages/cadastroUsuario/CadastroUsuario';\r\nimport Navbar from './components/statics/navbar/Navbar';\r\nimport Footer from './components/statics/footer/Footer';\r\nimport Login from './pages/login/Login';\r\nimport ListaTema from './components/temas/listatema/ListaTema';\r\nimport ListaPostagem from './components/postagens/listapostagem/ListaPostagem';\r\nimport CadastroPost from './components/postagens/cadastroPost/CadastroPost';\r\nimport CadastroTema from './components/temas/cadastroTema/CadastroTema';\r\nimport DeletarPostagem from './components/postagens/deletarPostagem/DeletarPostagem';\r\nimport DeletarTema from './components/temas/deletartema/DeletarTema';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AppAnime from './pages/animes/AppAnime';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className = 'fundoBack'>\r\n    <Provider store={store}>\r\n      <ToastContainer/>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Navbar />\r\n      <Switch>\r\n        <div style={{minHeight: '100vh'}}>\r\n          \r\n          <Route exact path='/'>\r\n            <Login />\r\n          </Route>\r\n\r\n          <Route path='/login'>\r\n            <Login />\r\n          </Route>\r\n\r\n          <Route path='/home'>\r\n            <Home />\r\n          </Route>\r\n          <Route path='/cadastrousuario'>\r\n            <CadastroUsuario />\r\n          </Route>\r\n          <Route path='/temas'>\r\n            <ListaTema />\r\n          </Route>\r\n          <Route path='/posts'>\r\n            <ListaPostagem />\r\n          </Route>\r\n          <Route path='/anime'>\r\n            <AppAnime />\r\n          </Route>\r\n          <Route exact path='/formularioPostagem'>\r\n            <CadastroPost />\r\n          </Route>\r\n          <Route exact path='/formularioPostagem/:id'>\r\n            <CadastroPost />\r\n          </Route>\r\n          <Route exact path='/formularioTema'>\r\n            <CadastroTema />\r\n          </Route>\r\n          <Route exact path='/formularioTema/:id'>\r\n            <CadastroTema />\r\n          </Route>\r\n          <Route path='/deletarPostagem/:id'>\r\n            <DeletarPostagem />\r\n          </Route>\r\n          <Route path='/deletarTema/:id'>\r\n            <DeletarTema />\r\n          </Route>\r\n        </div>\r\n      </Switch>\r\n      <Footer />\r\n    </Router>\r\n    </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}